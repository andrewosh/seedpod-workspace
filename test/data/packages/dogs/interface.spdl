import {
  Animal as OtherAnimal,
  Human,
  fourLimbedAnimals
} from 'animals'
import {
  VIEW,
  EDIT,
  CREATE
} from '@seedpod/actions'

enum Energy {
  LOW,
  MEDIUM,
  HIGH
}

struct AgeInfo {
  birthday: string
  age: uint16
}

type Dog extends Animal {
  breed: string
  energy?: Energy
}

type Walker extends Human {
  age: AgeInfo
  walking?: [Dog]
}

action ViewWalker extends VIEW {
  filter: Walker
}

action EditWalker extends EDIT {
  filter: Walker
}

action CreateWalker extends CREATE {
  returns: Walker
}

trigger oldWalkers (walker: Walker) {
  selector: {
    age: { $gt: 80 }
  }
}

query breedsForWalker (walker: string): [Breed] {
  SELECT ?breed WHERE {
    $walker Walker.walking ?o
    ?o Dog.breed ?breed
  }
}

query linksToAnimals (): [any] {
  SELECT ?o WHERE {
    @types Animal ?o
  }
}