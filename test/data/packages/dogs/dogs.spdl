import {
  Animal as OtherAnimal,
  Human
} from 'animals'
import {
  VIEW,
  EDIT
} from '@seedpod/actions'

enum Energy {
  LOW,
  MEDIUM,
  HIGH
}

struct AgeInfo {
  birthday: string
  age: uint16
}

type Dog extends Animal {
  breed: string
  energy?: Energy
}

type Walker extends Human {
  age: AgeInfo
  walking?: [Dog]
}

tag type Location {
  lat: float
  lon: float
  target: Human
}

action ViewWalker extends VIEW {
  filter: Walker
}

action EditWalker extends EDIT {
  filter: Walker
}

sparql query breedsForWalker (walker: string): [Breed] {
  SELECT ?breed WHERE {
    $walker Walker.walking ?o
    ?o Dog.breed ?breed
  }
}

sparql query linksToAnimals (): [any] {
  SELECT ?o WHERE {
    ?s Animal ?o
  }
}